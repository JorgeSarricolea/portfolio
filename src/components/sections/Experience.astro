---
import experiences from "@/js/objects/experiences.js";

/**
 * Formats a date to a human-readable string.
 * @param {string} date - The date to format.
 * @returns {string} - The formatted date string.
 */
const formatDate = (date) => {
  return date
    ? new Date(date).toLocaleDateString("en-US", {
        month: "long",
        year: "numeric",
      })
    : "Present";
};

/**
 * Calculates the number of months between two dates and formats the result into years and months.
 * @param {string} startDate - The start date.
 * @param {string} endDate - The end date.
 * @returns {string} - The formatted duration string.
 */
const calculateDuration = (startDate, endDate) => {
  if (!endDate) {
    return ""; // Return an empty string if endDate is null
  }

  const start = new Date(startDate);
  const end = new Date(endDate);
  const totalMonths =
    (end.getFullYear() - start.getFullYear()) * 12 +
    (end.getMonth() - start.getMonth());

  // Ensure at least one month is counted
  const months = totalMonths === 0 ? 1 : totalMonths;

  const years = Math.floor(months / 12);
  const remainingMonths = months % 12;

  let duration = "";
  if (years > 0) {
    duration += `${years} year${years > 1 ? "s" : ""}`;
  }
  if (remainingMonths > 0) {
    if (years > 0) duration += " ";
    duration += `${remainingMonths} month${remainingMonths > 1 ? "s" : ""}`;
  }

  return duration;
};
---

<section class="flex flex-col justify-between gap-2 mt-8">
  <h1 class="text-xl font-bold">Experience</h1>
  <div class="flex flex-col gap-4">
    {
      experiences.map((experience) => (
        <div>
          <div class="flex justify-between">
            <div>
              <h3 class="text-black font-bold text-xl capitalize">
                {experience.position}
              </h3>
              <h2 class="font-bold">
                {experience.company} | {experience.type}
              </h2>
              <div class="flex gap-2 text-sm">
                <span>
                  {formatDate(experience.startDate)} -{" "}
                  {experience.endDate
                    ? formatDate(experience.endDate)
                    : "Present"}
                  {experience.endDate &&
                    ` â€¢ ${calculateDuration(experience.startDate, experience.endDate)}`}
                </span>
              </div>
              <span class="text-sm">{experience.location}</span>
            </div>
            <a
              href={experience.url}
              target="_blank"
              class="hover:text-secondary h-fit"
            >
              <i class="fa-solid fa-up-right-from-square" />
            </a>
          </div>
          <p class="mt-2">{experience.description}</p>
        </div>
      ))
    }
  </div>
</section>
